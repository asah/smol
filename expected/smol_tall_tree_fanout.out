-- Test tall tree navigation using limited internal fanout
-- Targets lines 4040-4084 (smol_rightmost_leaf, smol_prev_leaf)
-- Targets lines 3785-3787 (internal node capacity doubling during realloc)
SET client_min_messages = warning;
CREATE EXTENSION IF NOT EXISTS smol;
-- Strategy: Limit internal node fanout to 10 children
-- With ~500 leaf pages, this creates:
-- Level 0: 500 leaf pages
-- Level 1: 50 internal pages (500/10)
-- Level 2: 5 internal pages (50/10)
-- Level 3: 1 root (5/10)
-- Height = 4
SET smol.test_max_internal_fanout = 10;
DROP TABLE IF EXISTS t_tall CASCADE;
CREATE UNLOGGED TABLE t_tall (k int8);
-- Create enough data to force ~500+ leaf pages
-- Each leaf holds ~450 int8 values (8 bytes each)
-- 500 leaves * 450 = 225,000 rows should be enough
INSERT INTO t_tall SELECT i FROM generate_series(1, 225000) i;
-- Build index with limited fanout to force tall tree
CREATE INDEX t_tall_smol ON t_tall USING smol(k);
-- Test backward scan to trigger smol_rightmost_leaf (lines 4070-4082)
-- This should navigate down the tree to find the rightmost leaf (height > 2 required)
-- Force index-only scan with backward direction
SET enable_seqscan = off;
SET enable_bitmapscan = off;
SELECT count(*) FROM (SELECT k FROM t_tall ORDER BY k DESC LIMIT 10) s;
 count 
-------
    10
(1 row)

-- Test backward scan with LIMIT to exercise smol_prev_leaf (lines 4097-4116)
-- This triggers backward leaf-to-leaf navigation across multiple pages
SELECT k FROM t_tall ORDER BY k DESC LIMIT 1000 OFFSET 10;
   k    
--------
 224990
 224989
 224988
 224987
 224986
 224985
 224984
 224983
 224982
 224981
 224980
 224979
 224978
 224977
 224976
 224975
 224974
 224973
 224972
 224971
 224970
 224969
 224968
 224967
 224966
 224965
 224964
 224963
 224962
 224961
 224960
 224959
 224958
 224957
 224956
 224955
 224954
 224953
 224952
 224951
 224950
 224949
 224948
 224947
 224946
 224945
 224944
 224943
 224942
 224941
 224940
 224939
 224938
 224937
 224936
 224935
 224934
 224933
 224932
 224931
 224930
 224929
 224928
 224927
 224926
 224925
 224924
 224923
 224922
 224921
 224920
 224919
 224918
 224917
 224916
 224915
 224914
 224913
 224912
 224911
 224910
 224909
 224908
 224907
 224906
 224905
 224904
 224903
 224902
 224901
 224900
 224899
 224898
 224897
 224896
 224895
 224894
 224893
 224892
 224891
 224890
 224889
 224888
 224887
 224886
 224885
 224884
 224883
 224882
 224881
 224880
 224879
 224878
 224877
 224876
 224875
 224874
 224873
 224872
 224871
 224870
 224869
 224868
 224867
 224866
 224865
 224864
 224863
 224862
 224861
 224860
 224859
 224858
 224857
 224856
 224855
 224854
 224853
 224852
 224851
 224850
 224849
 224848
 224847
 224846
 224845
 224844
 224843
 224842
 224841
 224840
 224839
 224838
 224837
 224836
 224835
 224834
 224833
 224832
 224831
 224830
 224829
 224828
 224827
 224826
 224825
 224824
 224823
 224822
 224821
 224820
 224819
 224818
 224817
 224816
 224815
 224814
 224813
 224812
 224811
 224810
 224809
 224808
 224807
 224806
 224805
 224804
 224803
 224802
 224801
 224800
 224799
 224798
 224797
 224796
 224795
 224794
 224793
 224792
 224791
 224790
 224789
 224788
 224787
 224786
 224785
 224784
 224783
 224782
 224781
 224780
 224779
 224778
 224777
 224776
 224775
 224774
 224773
 224772
 224771
 224770
 224769
 224768
 224767
 224766
 224765
 224764
 224763
 224762
 224761
 224760
 224759
 224758
 224757
 224756
 224755
 224754
 224753
 224752
 224751
 224750
 224749
 224748
 224747
 224746
 224745
 224744
 224743
 224742
 224741
 224740
 224739
 224738
 224737
 224736
 224735
 224734
 224733
 224732
 224731
 224730
 224729
 224728
 224727
 224726
 224725
 224724
 224723
 224722
 224721
 224720
 224719
 224718
 224717
 224716
 224715
 224714
 224713
 224712
 224711
 224710
 224709
 224708
 224707
 224706
 224705
 224704
 224703
 224702
 224701
 224700
 224699
 224698
 224697
 224696
 224695
 224694
 224693
 224692
 224691
 224690
 224689
 224688
 224687
 224686
 224685
 224684
 224683
 224682
 224681
 224680
 224679
 224678
 224677
 224676
 224675
 224674
 224673
 224672
 224671
 224670
 224669
 224668
 224667
 224666
 224665
 224664
 224663
 224662
 224661
 224660
 224659
 224658
 224657
 224656
 224655
 224654
 224653
 224652
 224651
 224650
 224649
 224648
 224647
 224646
 224645
 224644
 224643
 224642
 224641
 224640
 224639
 224638
 224637
 224636
 224635
 224634
 224633
 224632
 224631
 224630
 224629
 224628
 224627
 224626
 224625
 224624
 224623
 224622
 224621
 224620
 224619
 224618
 224617
 224616
 224615
 224614
 224613
 224612
 224611
 224610
 224609
 224608
 224607
 224606
 224605
 224604
 224603
 224602
 224601
 224600
 224599
 224598
 224597
 224596
 224595
 224594
 224593
 224592
 224591
 224590
 224589
 224588
 224587
 224586
 224585
 224584
 224583
 224582
 224581
 224580
 224579
 224578
 224577
 224576
 224575
 224574
 224573
 224572
 224571
 224570
 224569
 224568
 224567
 224566
 224565
 224564
 224563
 224562
 224561
 224560
 224559
 224558
 224557
 224556
 224555
 224554
 224553
 224552
 224551
 224550
 224549
 224548
 224547
 224546
 224545
 224544
 224543
 224542
 224541
 224540
 224539
 224538
 224537
 224536
 224535
 224534
 224533
 224532
 224531
 224530
 224529
 224528
 224527
 224526
 224525
 224524
 224523
 224522
 224521
 224520
 224519
 224518
 224517
 224516
 224515
 224514
 224513
 224512
 224511
 224510
 224509
 224508
 224507
 224506
 224505
 224504
 224503
 224502
 224501
 224500
 224499
 224498
 224497
 224496
 224495
 224494
 224493
 224492
 224491
 224490
 224489
 224488
 224487
 224486
 224485
 224484
 224483
 224482
 224481
 224480
 224479
 224478
 224477
 224476
 224475
 224474
 224473
 224472
 224471
 224470
 224469
 224468
 224467
 224466
 224465
 224464
 224463
 224462
 224461
 224460
 224459
 224458
 224457
 224456
 224455
 224454
 224453
 224452
 224451
 224450
 224449
 224448
 224447
 224446
 224445
 224444
 224443
 224442
 224441
 224440
 224439
 224438
 224437
 224436
 224435
 224434
 224433
 224432
 224431
 224430
 224429
 224428
 224427
 224426
 224425
 224424
 224423
 224422
 224421
 224420
 224419
 224418
 224417
 224416
 224415
 224414
 224413
 224412
 224411
 224410
 224409
 224408
 224407
 224406
 224405
 224404
 224403
 224402
 224401
 224400
 224399
 224398
 224397
 224396
 224395
 224394
 224393
 224392
 224391
 224390
 224389
 224388
 224387
 224386
 224385
 224384
 224383
 224382
 224381
 224380
 224379
 224378
 224377
 224376
 224375
 224374
 224373
 224372
 224371
 224370
 224369
 224368
 224367
 224366
 224365
 224364
 224363
 224362
 224361
 224360
 224359
 224358
 224357
 224356
 224355
 224354
 224353
 224352
 224351
 224350
 224349
 224348
 224347
 224346
 224345
 224344
 224343
 224342
 224341
 224340
 224339
 224338
 224337
 224336
 224335
 224334
 224333
 224332
 224331
 224330
 224329
 224328
 224327
 224326
 224325
 224324
 224323
 224322
 224321
 224320
 224319
 224318
 224317
 224316
 224315
 224314
 224313
 224312
 224311
 224310
 224309
 224308
 224307
 224306
 224305
 224304
 224303
 224302
 224301
 224300
 224299
 224298
 224297
 224296
 224295
 224294
 224293
 224292
 224291
 224290
 224289
 224288
 224287
 224286
 224285
 224284
 224283
 224282
 224281
 224280
 224279
 224278
 224277
 224276
 224275
 224274
 224273
 224272
 224271
 224270
 224269
 224268
 224267
 224266
 224265
 224264
 224263
 224262
 224261
 224260
 224259
 224258
 224257
 224256
 224255
 224254
 224253
 224252
 224251
 224250
 224249
 224248
 224247
 224246
 224245
 224244
 224243
 224242
 224241
 224240
 224239
 224238
 224237
 224236
 224235
 224234
 224233
 224232
 224231
 224230
 224229
 224228
 224227
 224226
 224225
 224224
 224223
 224222
 224221
 224220
 224219
 224218
 224217
 224216
 224215
 224214
 224213
 224212
 224211
 224210
 224209
 224208
 224207
 224206
 224205
 224204
 224203
 224202
 224201
 224200
 224199
 224198
 224197
 224196
 224195
 224194
 224193
 224192
 224191
 224190
 224189
 224188
 224187
 224186
 224185
 224184
 224183
 224182
 224181
 224180
 224179
 224178
 224177
 224176
 224175
 224174
 224173
 224172
 224171
 224170
 224169
 224168
 224167
 224166
 224165
 224164
 224163
 224162
 224161
 224160
 224159
 224158
 224157
 224156
 224155
 224154
 224153
 224152
 224151
 224150
 224149
 224148
 224147
 224146
 224145
 224144
 224143
 224142
 224141
 224140
 224139
 224138
 224137
 224136
 224135
 224134
 224133
 224132
 224131
 224130
 224129
 224128
 224127
 224126
 224125
 224124
 224123
 224122
 224121
 224120
 224119
 224118
 224117
 224116
 224115
 224114
 224113
 224112
 224111
 224110
 224109
 224108
 224107
 224106
 224105
 224104
 224103
 224102
 224101
 224100
 224099
 224098
 224097
 224096
 224095
 224094
 224093
 224092
 224091
 224090
 224089
 224088
 224087
 224086
 224085
 224084
 224083
 224082
 224081
 224080
 224079
 224078
 224077
 224076
 224075
 224074
 224073
 224072
 224071
 224070
 224069
 224068
 224067
 224066
 224065
 224064
 224063
 224062
 224061
 224060
 224059
 224058
 224057
 224056
 224055
 224054
 224053
 224052
 224051
 224050
 224049
 224048
 224047
 224046
 224045
 224044
 224043
 224042
 224041
 224040
 224039
 224038
 224037
 224036
 224035
 224034
 224033
 224032
 224031
 224030
 224029
 224028
 224027
 224026
 224025
 224024
 224023
 224022
 224021
 224020
 224019
 224018
 224017
 224016
 224015
 224014
 224013
 224012
 224011
 224010
 224009
 224008
 224007
 224006
 224005
 224004
 224003
 224002
 224001
 224000
 223999
 223998
 223997
 223996
 223995
 223994
 223993
 223992
 223991
(1000 rows)

-- Test forward scan across many pages to ensure tall tree works correctly
SELECT count(*) FROM t_tall WHERE k > 50000 AND k < 200000;
 count  
--------
 149999
(1 row)

-- Test index-only scan to verify tuple retrieval works with tall trees
SET enable_seqscan = off;
SELECT min(k), max(k), count(*) FROM t_tall;
 min |  max   | count  
-----+--------+--------
   1 | 225000 | 225000
(1 row)

-- Cleanup
DROP TABLE t_tall CASCADE;
RESET smol.test_max_internal_fanout;
