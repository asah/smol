-- Test backward scans with INCLUDE columns of various sizes
-- Targets lines 2699-2702: different INCLUDE column size handling in backward scans
SET smol.key_rle_version = 'v2';
SET client_min_messages = warning;
CREATE EXTENSION IF NOT EXISTS smol;
SET enable_seqscan = off;
SET enable_bitmapscan = off;
SET max_parallel_workers_per_gather = 0;
-- Create table with INCLUDE columns of different sizes
DROP TABLE IF EXISTS t_backward_inc_sizes CASCADE;
CREATE UNLOGGED TABLE t_backward_inc_sizes (
    k int4,
    v1 int2,    -- 2 bytes
    v2 int4,    -- 4 bytes  
    v3 int8,    -- 8 bytes
    v4 uuid     -- 16 bytes
);
-- Insert data that will compress with RLE
INSERT INTO t_backward_inc_sizes 
SELECT i, 100::int2, 200, 300::int8, '12345678-1234-5678-1234-567812345678'::uuid
FROM generate_series(1, 5000) i;
ALTER TABLE t_backward_inc_sizes SET (autovacuum_enabled = off);
VACUUM (FREEZE, ANALYZE) t_backward_inc_sizes;
CREATE INDEX t_backward_inc_sizes_idx ON t_backward_inc_sizes 
    USING smol(k) INCLUDE (v1, v2, v3, v4);
-- Backward scan to trigger INCLUDE column copying with different sizes
SELECT k, v1, v2, v3, v4 FROM t_backward_inc_sizes 
WHERE k <= 100 ORDER BY k DESC LIMIT 5;
  k  | v1  | v2  | v3  |                  v4                  
-----+-----+-----+-----+--------------------------------------
 100 | 100 | 200 | 300 | 12345678-1234-5678-1234-567812345678
  99 | 100 | 200 | 300 | 12345678-1234-5678-1234-567812345678
  98 | 100 | 200 | 300 | 12345678-1234-5678-1234-567812345678
  97 | 100 | 200 | 300 | 12345678-1234-5678-1234-567812345678
  96 | 100 | 200 | 300 | 12345678-1234-5678-1234-567812345678
(5 rows)

-- Verify correctness
SELECT count(*) = 5 AS correct_count FROM (
    SELECT k, v1, v2, v3, v4 FROM t_backward_inc_sizes 
    WHERE k <= 100 ORDER BY k DESC LIMIT 5
) sub WHERE v1 = 100 AND v2 = 200 AND v3 = 300;
 correct_count 
---------------
 t
(1 row)

-- Cleanup
DROP TABLE t_backward_inc_sizes CASCADE;
