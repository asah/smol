SET smol.key_rle_version = 'v2';
SET client_min_messages = warning;
CREATE EXTENSION IF NOT EXISTS smol;
-- Test backward scan with equality bound to hit have_k1_eq termination path
-- Targets lines 1931-1932: have_k1_eq with c < 0 termination
-- Create table with duplicates
DROP TABLE IF EXISTS t_eq_backward CASCADE;
CREATE UNLOGGED TABLE t_eq_backward (k int4, v int4);
-- Insert data: many rows with k=500, and other values
INSERT INTO t_eq_backward
SELECT
    CASE WHEN i % 10 = 0 THEN 500 ELSE i END,
    i
FROM generate_series(1, 1000) i;
CREATE INDEX idx_eq_backward ON t_eq_backward USING smol(k);
ANALYZE t_eq_backward;
SET enable_seqscan = off;
SET enable_indexscan = off;
SET enable_bitmapscan = off;
-- Equality scan with backward direction (ORDER BY DESC)
-- This sets have_k1_eq=true (BTEqualStrategyNumber)
-- The backward scan should terminate when c < 0 (past the equality run)
SELECT k, v FROM t_eq_backward WHERE k = 500 ORDER BY k DESC LIMIT 20;
  k  |  v  
-----+-----
 500 |  10
 500 |  20
 500 |  30
 500 |  40
 500 |  50
 500 |  60
 500 |  70
 500 |  80
 500 |  90
 500 | 100
 500 | 110
 500 | 120
 500 | 130
 500 | 140
 500 | 150
 500 | 160
 500 | 170
 500 | 180
 500 | 190
 500 | 200
(20 rows)

-- Test with text key and varwidth to hit line 1982 (has_varwidth path)
DROP TABLE IF EXISTS t_eq_text_backward CASCADE;
CREATE UNLOGGED TABLE t_eq_text_backward (k text COLLATE "C", v int4);
INSERT INTO t_eq_text_backward
SELECT
    CASE WHEN i % 10 = 0 THEN 'key_500' ELSE 'key_' || i::text END,
    i
FROM generate_series(1, 1000) i;
CREATE INDEX idx_eq_text_backward ON t_eq_text_backward USING smol(k);
ANALYZE t_eq_text_backward;
-- Equality scan backward with text (varwidth)
SELECT k, v FROM t_eq_text_backward WHERE k = 'key_500' ORDER BY k DESC LIMIT 20;
    k    |  v  
---------+-----
 key_500 |  10
 key_500 |  20
 key_500 |  30
 key_500 |  40
 key_500 |  50
 key_500 |  60
 key_500 |  70
 key_500 |  80
 key_500 |  90
 key_500 | 100
 key_500 | 110
 key_500 | 120
 key_500 | 130
 key_500 | 140
 key_500 | 150
 key_500 | 160
 key_500 | 170
 key_500 | 180
 key_500 | 190
 key_500 | 200
(20 rows)

-- Test with int8 key to hit line 1988 (key_len == 8)
DROP TABLE IF EXISTS t_eq_int8_backward CASCADE;
CREATE UNLOGGED TABLE t_eq_int8_backward (k int8);
INSERT INTO t_eq_int8_backward
SELECT
    CASE WHEN i % 10 = 0 THEN 500::int8 ELSE i::int8 END
FROM generate_series(1, 1000) i;
CREATE INDEX idx_eq_int8_backward ON t_eq_int8_backward USING smol(k);
ANALYZE t_eq_int8_backward;
-- Equality scan backward with int8
SELECT k FROM t_eq_int8_backward WHERE k = 500 ORDER BY k DESC LIMIT 20;
  k  
-----
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
 500
(20 rows)

-- Cleanup
DROP TABLE t_eq_backward CASCADE;
DROP TABLE t_eq_text_backward CASCADE;
DROP TABLE t_eq_int8_backward CASCADE;
