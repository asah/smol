-- Additional fixed-length type coverage for SMOL
SET client_min_messages = warning;
CREATE EXTENSION IF NOT EXISTS smol;
-- 1) uuid single-key
DROP TABLE IF EXISTS t_uuid CASCADE;
CREATE UNLOGGED TABLE t_uuid(a uuid);
INSERT INTO t_uuid SELECT gen_random_uuid() FROM generate_series(1,1000);
CREATE INDEX t_uuid_smol ON t_uuid USING smol(a);
SET enable_seqscan=off; SET enable_bitmapscan=off; SET enable_indexonlyscan=on;
-- basic check: non-empty and ordered when scanning >= first value
WITH first AS (SELECT a AS m FROM t_uuid ORDER BY a ASC LIMIT 1)
SELECT count(*) > 0 FROM t_uuid, first WHERE a >= m;
 ?column? 
----------
 t
(1 row)

-- 2) money single-key
DROP TABLE IF EXISTS t_money CASCADE;
CREATE UNLOGGED TABLE t_money(a money);
INSERT INTO t_money SELECT (i * 100)::money FROM generate_series(1,1000) i;
CREATE INDEX t_money_smol ON t_money USING smol(a);
SET enable_seqscan=off; SET enable_bitmapscan=off; SET enable_indexonlyscan=on;
SELECT sum(a)::money FROM t_money WHERE a >= '10000'::money;
      sum       
----------------
 $49,555,000.00
(1 row)

-- 3) INCLUDE with non-integer fixed-length include (uuid)
DROP TABLE IF EXISTS t_inc_uuid CASCADE;
CREATE UNLOGGED TABLE t_inc_uuid(b int4, u uuid);
INSERT INTO t_inc_uuid SELECT (i % 1000), gen_random_uuid() FROM generate_series(1,5000) i;
CREATE INDEX t_inc_uuid_smol ON t_inc_uuid USING smol(b) INCLUDE (u);
SET enable_indexscan=off;  -- force IOS
SELECT count(*) FROM t_inc_uuid WHERE b > 500;
 count 
-------
  2495
(1 row)

