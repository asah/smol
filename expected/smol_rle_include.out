-- smol_rle_include.sql: RLE encoding and INCLUDE column tests
-- Consolidates: RLE edge cases, RLE with INCLUDE, INCLUDE columns, text GUC
SET client_min_messages = warning;
CREATE EXTENSION IF NOT EXISTS smol;
-- ============================================================================
-- RLE Edge Cases
-- ============================================================================
DROP TABLE IF EXISTS t_rle_edges CASCADE;
CREATE TABLE t_rle_edges (k int4);
-- Test v1 RLE
SET smol.key_rle_version = 'v1';
INSERT INTO t_rle_edges SELECT (i % 100) FROM generate_series(1, 5000) i;
CREATE INDEX t_rle_edges_v1_idx ON t_rle_edges USING smol(k);
SELECT count(DISTINCT k) FROM t_rle_edges WHERE k < 50;
 count 
-------
    50
(1 row)

-- Test v2 RLE
TRUNCATE t_rle_edges;
SET smol.key_rle_version = 'v2';
INSERT INTO t_rle_edges SELECT (i % 100) FROM generate_series(1, 5000) i;
ERROR:  smol is read-only: aminsert is not supported
CREATE INDEX t_rle_edges_v2_idx ON t_rle_edges USING smol(k);
SELECT count(DISTINCT k) FROM t_rle_edges WHERE k >= 50;
 count 
-------
     0
(1 row)

-- Single run RLE
TRUNCATE t_rle_edges;
INSERT INTO t_rle_edges SELECT 42 FROM generate_series(1, 1000);
ERROR:  smol is read-only: aminsert is not supported
CREATE INDEX t_rle_edges_single_idx ON t_rle_edges USING smol(k);
SELECT count(*) FROM t_rle_edges WHERE k = 42;
 count 
-------
     0
(1 row)

-- ============================================================================
-- RLE with INCLUDE Columns (various sizes)
-- ============================================================================
DROP TABLE IF EXISTS t_rle_include CASCADE;
CREATE TABLE t_rle_include (
    k int4,
    inc_int2 int2,
    inc_int4 int4,
    inc_int8 int8,
    inc_text text
);
-- Many duplicates with INCLUDE columns
INSERT INTO t_rle_include
SELECT 
    (i % 50)::int4,
    i::int2,
    i::int4,
    i::int8,
    'include_' || i
FROM generate_series(1, 2000) i;
CREATE INDEX t_rle_include_idx ON t_rle_include USING smol(k) 
    INCLUDE (inc_int2, inc_int4, inc_int8, inc_text);
-- Index-only scan with INCLUDE columns
SET enable_indexonlyscan = on;
SELECT k, inc_int2, inc_int4 FROM t_rle_include WHERE k = 25 LIMIT 5;
 k  | inc_int2 | inc_int4 
----+----------+----------
 25 |       25 |       25
 25 |       75 |       75
 25 |      125 |      125
 25 |      175 |      175
 25 |      225 |      225
(5 rows)

-- ============================================================================
-- Basic INCLUDE Column Support
-- ============================================================================
DROP TABLE IF EXISTS t_include CASCADE;
CREATE TABLE t_include (
    k int4,
    v1 int4,
    v2 text,
    v3 uuid
);
INSERT INTO t_include
SELECT 
    i,
    i * 2,
    'value_' || i,
    gen_random_uuid()
FROM generate_series(1, 1000) i;
CREATE INDEX t_include_idx ON t_include USING smol(k) INCLUDE (v1, v2, v3);
-- Index-only scans
SELECT k, v1, v2 FROM t_include WHERE k BETWEEN 100 AND 110;
  k  | v1  |    v2     
-----+-----+-----------
 100 | 200 | value_100
 101 | 202 | value_100
 102 | 204 | value_101
 103 | 206 | value_102
 104 | 208 | value_103
 105 | 210 | value_104
 106 | 212 | value_105
 107 | 214 | value_106
 108 | 216 | value_107
 109 | 218 | value_108
 110 | 220 | value_109
(11 rows)

SELECT k, v1 FROM t_include WHERE k > 900;
  k   |  v1  
------+------
  901 | 1802
  902 | 1804
  903 | 1806
  904 | 1808
  905 | 1810
  906 | 1812
  907 | 1814
  908 | 1816
  909 | 1818
  910 | 1820
  911 | 1822
  912 | 1824
  913 | 1826
  914 | 1828
  915 | 1830
  916 | 1832
  917 | 1834
  918 | 1836
  919 | 1838
  920 | 1840
  921 | 1842
  922 | 1844
  923 | 1846
  924 | 1848
  925 | 1850
  926 | 1852
  927 | 1854
  928 | 1856
  929 | 1858
  930 | 1860
  931 | 1862
  932 | 1864
  933 | 1866
  934 | 1868
  935 | 1870
  936 | 1872
  937 | 1874
  938 | 1876
  939 | 1878
  940 | 1880
  941 | 1882
  942 | 1884
  943 | 1886
  944 | 1888
  945 | 1890
  946 | 1892
  947 | 1894
  948 | 1896
  949 | 1898
  950 | 1900
  951 | 1902
  952 | 1904
  953 | 1906
  954 | 1908
  955 | 1910
  956 | 1912
  957 | 1914
  958 | 1916
  959 | 1918
  960 | 1920
  961 | 1922
  962 | 1924
  963 | 1926
  964 | 1928
  965 | 1930
  966 | 1932
  967 | 1934
  968 | 1936
  969 | 1938
  970 | 1940
  971 | 1942
  972 | 1944
  973 | 1946
  974 | 1948
  975 | 1950
  976 | 1952
  977 | 1954
  978 | 1956
  979 | 1958
  980 | 1960
  981 | 1962
  982 | 1964
  983 | 1966
  984 | 1968
  985 | 1970
  986 | 1972
  987 | 1974
  988 | 1976
  989 | 1978
  990 | 1980
  991 | 1982
  992 | 1984
  993 | 1986
  994 | 1988
  995 | 1990
  996 | 1992
  997 | 1994
  998 | 1996
  999 | 1998
 1000 | 2000
(100 rows)

-- Backward scan with INCLUDE
SELECT k, v1, v2 FROM t_include WHERE k > 800 ORDER BY k DESC LIMIT 10;
  k   |  v1  |     v2     
------+------+------------
 1000 | 2000 | value_1000
  999 | 1998 | value_999
  998 | 1996 | value_998
  997 | 1994 | value_997
  996 | 1992 | value_996
  995 | 1990 | value_995
  994 | 1988 | value_994
  993 | 1986 | value_993
  992 | 1984 | value_992
  991 | 1982 | value_991
(10 rows)

-- ============================================================================
-- INCLUDE RLE Mismatch Handling
-- ============================================================================
DROP TABLE IF EXISTS t_include_mismatch CASCADE;
CREATE TABLE t_include_mismatch (k int4, inc text);
-- Create index with RLE
INSERT INTO t_include_mismatch SELECT (i % 10), 'text_' || i FROM generate_series(1, 1000) i;
CREATE INDEX t_include_mismatch_rle_idx ON t_include_mismatch USING smol(k) INCLUDE (inc);
-- Query with INCLUDE (should handle RLE format correctly)
SELECT k, inc FROM t_include_mismatch WHERE k = 5 LIMIT 5;
 k |   inc   
---+---------
 5 | text_5
 5 | text_15
 5 | text_25
 5 | text_35
 5 | text_45
(5 rows)

-- ============================================================================
-- Text INCLUDE with GUC Options
-- ============================================================================
DROP TABLE IF EXISTS t_text_include CASCADE;
CREATE TABLE t_text_include (k int4, t text);
-- Test with different text_inline_threshold
SET smol.text_inline_threshold = 32;
INSERT INTO t_text_include SELECT i, repeat('x', i % 50) FROM generate_series(1, 500) i;
CREATE INDEX t_text_include_32_idx ON t_text_include USING smol(k) INCLUDE (t);
ERROR:  smol text32 INCLUDE exceeds 32 bytes
SELECT k, length(t) FROM t_text_include WHERE k < 10;
 k | length 
---+--------
 1 |      1
 2 |      2
 3 |      3
 4 |      4
 5 |      5
 6 |      6
 7 |      7
 8 |      8
 9 |      9
(9 rows)

-- Test with lower threshold
TRUNCATE t_text_include;
SET smol.text_inline_threshold = 16;
INSERT INTO t_text_include SELECT i, repeat('y', i % 30) FROM generate_series(1, 500) i;
CREATE INDEX t_text_include_16_idx ON t_text_include USING smol(k) INCLUDE (t);
SELECT k, length(t) FROM t_text_include WHERE k < 10;
ERROR:  smol: unsupported INCLUDE column size 32
RESET smol.text_inline_threshold;
-- Cleanup
DROP TABLE t_rle_edges CASCADE;
DROP TABLE t_rle_include CASCADE;
DROP TABLE t_include CASCADE;
DROP TABLE t_include_mismatch CASCADE;
DROP TABLE t_text_include CASCADE;
