-- Test rightmost descend paths (lines 3517-3518, 4107-4113)
SET client_min_messages = warning;
CREATE EXTENSION IF NOT EXISTS smol;
-- Lines 3517-3518: Forward scan where all keys are < lower_bound
-- This forces choosing rightmost child in find_first_leaf
DROP TABLE IF EXISTS t_rightmost CASCADE;
CREATE TABLE t_rightmost (k int4);
-- Insert enough data to create multi-level tree (height > 1)
INSERT INTO t_rightmost SELECT i FROM generate_series(1, 100000) i;
CREATE INDEX t_rightmost_idx ON t_rightmost USING smol(k);
-- Query with lower bound > all keys forces rightmost child selection
-- When searching for k >= 999999, all internal node keys will be < bound
-- so it chooses rightmost child at each level
SELECT count(*) FROM t_rightmost WHERE k >= 999999;
 count 
-------
     0
(1 row)

-- Lines 4107-4113: smol_rightmost_leaf() direct whitebox test
DROP TABLE t_rightmost CASCADE;
CREATE TABLE t_rightmost (k int4);
-- Create multi-level tree (height > 1, 300K rows is sufficient)
INSERT INTO t_rightmost SELECT i FROM generate_series(1, 300000) i;
CREATE INDEX t_rightmost_idx ON t_rightmost USING smol(k);
-- Directly call smol_rightmost_leaf() to trigger lines 4107-4113
SELECT smol_test_rightmost_leaf('t_rightmost_idx'::regclass) AS rightmost_leaf_block;
 rightmost_leaf_block 
----------------------
                  148
(1 row)

-- Lines 3517-3518: smol_find_first_leaf() with rightmost child selection
-- Call with bound > all keys to force rightmost child selection at each level
SELECT smol_test_find_first_leaf_rightmost('t_rightmost_idx'::regclass, 999999999::bigint) AS first_leaf_block;
 first_leaf_block 
------------------
              148
(1 row)

DROP TABLE t_rightmost CASCADE;
-- Test with two-column index for completeness
DROP TABLE IF EXISTS t_rightmost2 CASCADE;
CREATE TABLE t_rightmost2 (k int4, v int4);
INSERT INTO t_rightmost2 SELECT i, i*10 FROM generate_series(1, 100000) i;
CREATE INDEX t_rightmost2_idx ON t_rightmost2 USING smol(k, v);
-- Backward scan on two-column index
SELECT k, v FROM t_rightmost2 WHERE k <= 200000 ORDER BY k DESC, v DESC LIMIT 5;
 k | v 
---+---
(0 rows)

DROP TABLE t_rightmost2 CASCADE;
